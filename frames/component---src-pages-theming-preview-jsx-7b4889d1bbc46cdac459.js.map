{"version":3,"sources":["webpack:///./src/components/ui/Checkbox.jsx","webpack:///./src/components/ui/Radio.jsx","webpack:///./src/components/ui/Switch.jsx","webpack:///./src/components/ui/Slider.jsx","webpack:///./src/components/ui/TextField.jsx","webpack:///./src/components/ui/TextArea.jsx","webpack:///./src/pages/theming/preview.jsx"],"names":["useStyles","createUseStyles","theme","getCheckboxStyles","Checkbox","className","checked","disabled","invalid","leftLabel","rightLabel","useTheme","styles","cx","checkbox","checkboxLabel","type","defaultChecked","checkboxToggle","defaultProps","getRadioStyles","Radio","name","radio","radioLabel","radioToggle","getSwitchStyles","Switch","hover","focus","switch","getSliderStyles","Slider","value","useEffect","document","querySelectorAll","forEach","input","setSliderProgress","target","slider","defaultValue","data-invalid","onInput","getTextFieldStyles","TextField","line","label","caption","icon","textField","placeholder","xmlns","width","height","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","viewBox","d","cy","r","x1","y1","x2","y2","getTextAreaStyles","TextArea","resize","textArea","rows","main","maxWidth","margin","callout","padding","backgroundColor","initial","colors","grayscale","borderRadius","marginTop","marginBottom","section","preview","extend","display","alignItems","justifyContent","flexWrap","minHeight","border","updated","brand","background","marginRight","ThemePreview","location","initialTheme","state","Layout","SEO","title","Main","map","key","context","Button","idx"],"mappings":"0NAMMA,EAAYC,2BAAgB,SAACC,GAAD,OAAWC,4BAAkBD,MAEzDE,EAAW,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,UAAWC,EAAwD,EAAxDA,QAASC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC9DR,EAAQS,qBACRC,EAASZ,EAAUE,GAEzB,OACE,2BAAOG,UAAWQ,IAAGD,EAAOE,SAAUT,EAAWG,GAAW,YACzDC,GAAa,0BAAMJ,UAAWO,EAAOG,eAAgBN,GACtD,2BAAOO,KAAK,WAAWT,SAAUA,EAAUU,eAAgBX,IAC3D,0BAAMD,UAAWO,EAAOM,iBACvBR,GAAc,0BAAML,UAAWO,EAAOG,eAAgBL,KAa7DN,EAASe,aAAe,CACtBb,SAAS,EACTC,UAAU,EACVC,SAAS,GAGIJ,QC9BTJ,EAAYC,2BAAgB,SAACC,GAAD,OAAWkB,yBAAelB,MAEtDmB,EAAQ,SAAC,GAA4E,IAA1EC,EAAyE,EAAzEA,KAAMjB,EAAmE,EAAnEA,UAAWI,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,WAAYJ,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACpEN,EAAQS,qBACRC,EAASZ,EAAUE,GAEzB,OACE,2BAAOG,UAAWQ,IAAGD,EAAOW,MAAOlB,EAAWG,GAAW,YACtDC,GAAa,0BAAMJ,UAAWO,EAAOY,YAAaf,GACnD,2BAAOO,KAAK,QAAQM,KAAMA,EAAML,eAAgBX,EAASC,SAAUA,IACnE,0BAAMF,UAAWO,EAAOa,cACvBf,GAAc,0BAAML,UAAWO,EAAOY,YAAad,KAc1DW,EAAMF,aAAe,CACnBG,KAAM,QACNb,UAAW,GACXC,WAAY,GACZJ,SAAS,EACTC,UAAU,EACVC,SAAS,GAGIa,QClCTrB,EAAYC,2BAAgB,SAACC,GAAD,OAAWwB,0BAAgBxB,MAEvDyB,EAAS,SAAC,GAAoF,IAAlFtB,EAAiF,EAAjFA,UAAWI,EAAsE,EAAtEA,UAAWC,EAA2D,EAA3DA,WAAYJ,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,SAAwBC,GAAc,EAA5BoB,MAA4B,EAArBC,MAAqB,EAAdrB,SAC7EN,EAAQS,qBACRC,EAASZ,EAAUE,GAEzB,OACE,2BAAOG,UAAWQ,IAAGD,EAAOkB,OAAQzB,EAAWG,GAAW,YACvDC,GAAa,0BAAMJ,UAAU,SAASI,GACvC,2BAAOO,KAAK,WAAWC,eAAgBX,EAASC,SAAUA,IAC1D,0BAAMF,UAAU,WACfK,GAAc,0BAAML,UAAU,SAASK,KAe9CiB,EAAOR,aAAe,CACpBV,UAAW,GACXC,WAAY,GACZJ,SAAS,EACTC,UAAU,EACVqB,OAAO,EACPC,OAAO,EACPrB,SAAS,GAGImB,QCpCT3B,EAAYC,2BAAgB,SAACC,GAAD,OAAW6B,0BAAgB7B,MAEvD8B,EAAS,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAO5B,EAAmC,EAAnCA,UAAWE,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACtCN,EAAQS,qBACRC,EAASZ,EAAUE,GAQzB,OANAgC,qBAAU,WACRC,SACGC,iBAAiB,uBACjBC,SAAQ,SAACC,GAAeC,4BAAkB,CAAEC,OAAQF,SACtD,IAGD,2BAAOjC,UAAWQ,IAAGD,EAAO6B,OAAQpC,IAClC,2BACEW,KAAK,QACL0B,aAAcT,EACd1B,SAAUA,EACVoC,eAAcnC,EACdoC,QAASL,sBAEX,0BAAMlC,UAAU,aAChB,0BAAMA,UAAU,YAWtB2B,EAAOb,aAAe,CACpBc,MAAO,GACP1B,UAAU,EACVC,SAAS,GAGIwB,QCvCThC,EAAYC,2BAAgB,SAACC,GAAD,OAAW2C,6BAAmB3C,MAE1D4C,EAAY,SAAC,GAAyE,IAAvEb,EAAsE,EAAtEA,MAAO1B,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,QAASuC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,KAAM7C,EAAgB,EAAhBA,UACnEH,EAAQS,qBACRC,EAASZ,EAAUE,GAEzB,OACE,yBAAKG,UAAWQ,IAAGD,EAAOuC,UAAW9C,EAAWG,GAAW,UAAWuC,GAAQ,SAC3EC,GAAS,+BAAQA,GAClB,2BAAOhC,KAAK,OAAO0B,aAAcT,EAAO1B,SAAUA,EAAU6C,YAAY,gBACvEF,GACC,0BAAM7C,UAAU,QACd,yBACEgD,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,YAAY,IACZC,OAAO,eACPC,KAAK,OACLC,cAAc,QACdC,eAAe,QACfC,QAAQ,aAER,0BAAMJ,OAAO,OAAOK,EAAE,gBAAgBJ,KAAK,SAC3C,4BAAQ7C,GAAG,KAAKkD,GAAG,KAAKC,EAAE,MAC1B,0BAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAIvC,0BAAM/D,UAAU,eACf4C,GAAW,0BAAM5C,UAAU,WAAW4C,KAe7CH,EAAU3B,aAAe,CACvBc,MAAO,aACP1B,UAAU,EACVC,SAAS,EACTuC,MAAM,EACNG,MAAM,GAGOJ,QCrDT9C,EAAYC,2BAAgB,SAACC,GAAD,OAAWmE,4BAAkBnE,MAEzDoE,EAAW,SAAC,GAAiF,IAA/ErC,EAA8E,EAA9EA,MAAO5B,EAAuE,EAAvEA,UAAWkE,EAA4D,EAA5DA,OAAQhE,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,QAASuC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QACtE/C,GAD0F,EAAXgD,KACvEvC,sBACRC,EAASZ,EAAUE,GAEzB,OACE,yBACEG,UAAWQ,IACTD,EAAO4D,SACPnE,EACW,aAAXkE,GAAyB,WACd,eAAXA,GAA2B,WAChB,SAAXA,GAAqB,YACrB/D,GAAW,UACXuC,GAAQ,SAGTC,GAAS,+BAAQA,GAClB,8BACEN,aAAcT,EACd1B,SAAUA,EACV6C,YAAY,cACZqB,KAAM,IAER,0BAAMpE,UAAU,YACf4C,GAAW,0BAAM5C,UAAU,WAAW4C,KAgB7CqB,EAASnD,aAAe,CACtBc,MAAO,OACPsC,OAAQ,OACRhE,UAAU,EACVC,SAAS,EACTuC,MAAM,GAGOuB,QCzCTtE,EAAYC,0BAAgB,CAChCyE,KAAM,CACJC,SAAU,IACVC,OAAQ,QAEVC,QAAS,CACPC,QAAS,GACTC,gBAAiB,qBAAGC,QAA2BC,OAAOC,UAAU,MAChEC,aAAc,EACd,OAAQ,CACNC,UAAW,EACXC,aAAc,IAEhB,MAAO,CACLT,OAAQ,IAGZU,QAAS,CACPV,OAAQ,CAAC,EAAG,EAAG,GAAI,GACnB,OAAQ,CACNA,OAAQ,CAAC,GAAI,KAGjBW,QAAS,CACPC,OAAQ,UACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,SAAU,OACVC,UAAW,IACXC,OAAQ,iCAAGd,QAAwCC,OAAOC,UAAU,MACpEH,gBAAiB,qBAAGgB,QAA2Bd,OAAOe,MAAMC,YAC5D,SAAU,CACRR,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBhB,SAAU,QAEZ,eAAgB,CACduB,YAAa,OAEb,4BAA6B,CAAEvB,SAAU,WAoKhCwB,UA/JM,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SAChBC,EAAe1F,qBAEfT,EAAQ,CAAE8E,QAASqB,EAAcN,SADlB,UAAAK,EAASE,aAAT,eAAgBpG,QAASmG,GAExCzF,EAASZ,EAAUE,GAEzB,OACE,kBAACqG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAM,kBACX,kBAACC,EAAA,EAAD,CAAMrG,UAAWO,EAAO8D,MACtB,6BAASrE,UAAWO,EAAOiE,SACzB,uCACA,4EAEF,6BAASxE,UAAWO,EAAO0E,SACzB,sCACA,kBAAC,gBAAD,CAAepF,MAAOA,EAAM6F,SAC1B,yBAAK1F,UAAWO,EAAO2E,SACpB,CAAC,UAAW,aAAaoB,KAAI,SAAC3F,GAAD,OAC5B,yBAAK4F,IAAK5F,EAAMX,UAAU,OACvB,CAAC,UAAW,WAAY,WAAY,WAAWsG,KAAI,SAACE,GAAD,OAClD,kBAACC,EAAA,EAAD,CAAQF,IAAQ5F,EAAL,IAAa6F,EAAWxG,UAAWQ,IAAGgG,EAAS7F,EAAM,cAAhE,oBASZ,6BAASX,UAAWO,EAAO0E,SACzB,yCACA,kBAAC,gBAAD,CAAepF,MAAOA,EAAM6F,SAC1B,yBAAK1F,UAAWO,EAAO2E,SACpB,CAAC,UAAW,QAAQoB,KAAI,SAAC3F,GAAD,OACvB,yBAAK4F,IAAK5F,EAAMX,UAAU,OACvB,CACC,GACA,CAAEE,UAAU,GACZ,CAAEC,SAAS,GACX,CAAE0C,MAAM,GACR,CAAEF,MAAO,QAASC,QAAS,WAC3B,CAAEzC,SAAS,EAAMwC,MAAO,QAASC,QAAS,YAC1C0D,KAAI,SAACE,EAASE,GAAV,OACJ,kBAAC,EAAD,eACEH,IAAQ5F,EAAL,IAAa+F,EAChBhE,KAAe,SAAT/B,GACF6F,EAHN,CAIExG,UAAU,oCAQxB,6BAASA,UAAWO,EAAO0E,SACzB,wCACA,kBAAC,gBAAD,CAAepF,MAAOA,EAAM6F,SAC1B,yBAAK1F,UAAWO,EAAO2E,SACpB,CAAC,UAAW,QAAQoB,KAAI,SAAC3F,GAAD,OACvB,yBAAK4F,IAAK5F,EAAMX,UAAU,OACvB,CACC,GACA,CAAEE,UAAU,GACZ,CAAEC,SAAS,GACX,CAAEwC,MAAO,QAASC,QAAS,WAC3B,CAAEzC,SAAS,EAAMwC,MAAO,QAASC,QAAS,YAC1C0D,KAAI,SAACE,EAASE,GAAV,OACJ,kBAAC,EAAD,eACEH,IAAQ5F,EAAL,IAAa+F,EAChBhE,KAAe,SAAT/B,GACF6F,EAHN,CAIEtC,OAAO,WACPlE,UAAU,mCAQxB,6BAASA,UAAWO,EAAO0E,SACzB,wCACA,kBAAC,gBAAD,CAAepF,MAAOA,EAAM6F,SAC1B,yBAAK1F,UAAWO,EAAO2E,SACpB,CACC,GACA,CAAEjF,SAAS,GACX,CAAEC,UAAU,GACZ,CAAED,SAAS,EAAMC,UAAU,GAC3B,CAAEC,SAAS,GACX,CAAEF,SAAS,EAAME,SAAS,GAC1B,CAAEF,SAAS,EAAME,SAAS,EAAMD,UAAU,GAC1C,CAAEE,UAAW,SACb,CAAEC,WAAY,UACdiG,KAAI,SAACL,EAAOS,GAAR,OACJ,kBAAC,EAAD,eAAUH,IAAKG,EAAK1G,UAAU,aAAgBiG,UAKtD,6BAASjG,UAAWO,EAAO0E,SACzB,qCACA,kBAAC,gBAAD,CAAepF,MAAOA,EAAM6F,SAC1B,yBAAK1F,UAAWO,EAAO2E,SACpB,CACC,GACA,CAAEjF,SAAS,GACX,CAAEgB,KAAM,iBAAkBf,UAAU,GACpC,CAAEe,KAAM,iBAAkBf,UAAU,EAAMD,SAAS,GACnD,CAAEgB,KAAM,gBAAiBd,SAAS,GAClC,CAAEc,KAAM,gBAAiBd,SAAS,EAAMF,SAAS,GACjD,CAAEgB,KAAM,gBAAiBd,SAAS,EAAMF,SAAS,EAAMC,UAAU,GACjE,CAAEe,KAAM,cAAeb,UAAW,SAClC,CAAEa,KAAM,cAAeZ,WAAY,UACnCiG,KAAI,SAACL,EAAOS,GAAR,OACJ,kBAAC,EAAD,eAAOH,IAAKG,EAAK1G,UAAU,aAAgBiG,UAKnD,6BAASjG,UAAWO,EAAO0E,SACzB,sCACA,kBAAC,gBAAD,CAAepF,MAAOA,EAAM6F,SAC1B,yBAAK1F,UAAWO,EAAO2E,SACpB,CACC,GACA,CAAEjF,SAAS,GACX,CAAEC,UAAU,GACZ,CAAEA,UAAU,EAAMD,SAAS,GAC3B,CAAEE,SAAS,GACX,CAAEA,SAAS,EAAMF,SAAS,GAC1B,CAAEE,SAAS,EAAMF,SAAS,EAAMC,UAAU,GAC1C,CAAEE,UAAW,SACb,CAAEC,WAAY,UACdiG,KAAI,SAACL,EAAOS,GAAR,OACJ,kBAAC,EAAD,eAAQH,IAAKG,EAAK1G,UAAU,aAAgBiG,UAKpD,6BAASjG,UAAWO,EAAO0E,SACzB,sCACA,kBAAC,gBAAD,CAAepF,MAAOA,EAAM6F,SAC1B,yBAAK1F,UAAWO,EAAO2E,SACpB,CAAC,GAAI,CAAEhF,UAAU,GAAQ,CAAEC,SAAS,GAAQ,CAAEA,SAAS,EAAMD,UAAU,IAAQoG,KAC9E,SAACL,EAAOS,GAAR,OACE,kBAAC,EAAD,eAAQH,IAAKG,EAAK1G,UAAU,aAAgBiG","file":"component---src-pages-theming-preview-jsx-7b4889d1bbc46cdac459.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getCheckboxStyles } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getCheckboxStyles(theme))\n\nconst Checkbox = ({ className, checked, disabled, invalid, leftLabel, rightLabel }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <label className={cx(styles.checkbox, className, invalid && 'invalid')}>\n      {leftLabel && <span className={styles.checkboxLabel}>{leftLabel}</span>}\n      <input type=\"checkbox\" disabled={disabled} defaultChecked={checked} />\n      <span className={styles.checkboxToggle}></span>\n      {rightLabel && <span className={styles.checkboxLabel}>{rightLabel}</span>}\n    </label>\n  )\n}\n\nCheckbox.propTypes = {\n  className: PropTypes.string,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  invalid: PropTypes.bool,\n  leftLabel: PropTypes.string,\n  rightLabel: PropTypes.string,\n}\nCheckbox.defaultProps = {\n  checked: false,\n  disabled: false,\n  invalid: false,\n}\n\nexport default Checkbox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getRadioStyles } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getRadioStyles(theme))\n\nconst Radio = ({ name, className, leftLabel, rightLabel, checked, disabled, invalid }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <label className={cx(styles.radio, className, invalid && 'invalid')}>\n      {leftLabel && <span className={styles.radioLabel}>{leftLabel}</span>}\n      <input type=\"radio\" name={name} defaultChecked={checked} disabled={disabled} />\n      <span className={styles.radioToggle}></span>\n      {rightLabel && <span className={styles.radioLabel}>{rightLabel}</span>}\n    </label>\n  )\n}\n\nRadio.propTypes = {\n  name: PropTypes.string,\n  className: PropTypes.string,\n  leftLabel: PropTypes.string,\n  rightLabel: PropTypes.string,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  invalid: PropTypes.bool,\n}\nRadio.defaultProps = {\n  name: 'radio',\n  leftLabel: '',\n  rightLabel: '',\n  checked: false,\n  disabled: false,\n  invalid: false,\n}\n\nexport default Radio\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getSwitchStyles } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getSwitchStyles(theme))\n\nconst Switch = ({ className, leftLabel, rightLabel, checked, disabled, hover, focus, invalid }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <label className={cx(styles.switch, className, invalid && 'invalid')}>\n      {leftLabel && <span className=\"label\">{leftLabel}</span>}\n      <input type=\"checkbox\" defaultChecked={checked} disabled={disabled} />\n      <span className=\"toggle\"></span>\n      {rightLabel && <span className=\"label\">{rightLabel}</span>}\n    </label>\n  )\n}\n\nSwitch.propTypes = {\n  className: PropTypes.string,\n  leftLabel: PropTypes.string,\n  rightLabel: PropTypes.string,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  hover: PropTypes.bool,\n  focus: PropTypes.bool,\n  invalid: PropTypes.bool,\n}\nSwitch.defaultProps = {\n  leftLabel: '',\n  rightLabel: '',\n  checked: false,\n  disabled: false,\n  hover: false,\n  focus: false,\n  invalid: false,\n}\n\nexport default Switch\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getSliderStyles, setSliderProgress } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getSliderStyles(theme))\n\nconst Slider = ({ value, className, disabled, invalid }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  useEffect(() => {\n    document\n      .querySelectorAll('input[type=\"range\"]')\n      .forEach((input) => void setSliderProgress({ target: input }))\n  }, [])\n\n  return (\n    <label className={cx(styles.slider, className)}>\n      <input\n        type=\"range\"\n        defaultValue={value}\n        disabled={disabled}\n        data-invalid={invalid}\n        onInput={setSliderProgress}\n      />\n      <span className=\"progress\"></span>\n      <span className=\"track\"></span>\n    </label>\n  )\n}\n\nSlider.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number,\n  disabled: PropTypes.bool,\n  invalid: PropTypes.bool,\n}\nSlider.defaultProps = {\n  value: 50,\n  disabled: false,\n  invalid: false,\n}\n\nexport default Slider\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getTextFieldStyles } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getTextFieldStyles(theme))\n\nconst TextField = ({ value, disabled, invalid, line, label, caption, icon, className }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <div className={cx(styles.textField, className, invalid && 'invalid', line && 'line')}>\n      {label && <label>{label}</label>}\n      <input type=\"text\" defaultValue={value} disabled={disabled} placeholder=\"Placeholder\" />\n      {icon && (\n        <span className=\"icon\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            strokeWidth=\"2\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n            <circle cx=\"10\" cy=\"10\" r=\"7\"></circle>\n            <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\"></line>\n          </svg>\n        </span>\n      )}\n      <span className=\"background\"></span>\n      {caption && <span className=\"caption\">{caption}</span>}\n    </div>\n  )\n}\n\nTextField.propTypes = {\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n  invalid: PropTypes.bool,\n  line: PropTypes.bool,\n  icon: PropTypes.bool,\n  label: PropTypes.string,\n  caption: PropTypes.string,\n  className: PropTypes.string,\n}\nTextField.defaultProps = {\n  value: 'Text field',\n  disabled: false,\n  invalid: false,\n  line: false,\n  icon: false,\n}\n\nexport default TextField\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getTextAreaStyles } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getTextAreaStyles(theme))\n\nconst TextArea = ({ value, className, resize, disabled, invalid, line, label, caption, icon }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <div\n      className={cx(\n        styles.textArea,\n        className,\n        resize === 'vertical' && 'v-resize',\n        resize === 'horizontal' && 'h-resize',\n        resize === 'none' && 'no-resize',\n        invalid && 'invalid',\n        line && 'line',\n      )}\n    >\n      {label && <label>{label}</label>}\n      <textarea\n        defaultValue={value}\n        disabled={disabled}\n        placeholder=\"Placeholder\"\n        rows={1}\n      ></textarea>\n      <span className=\"resizer\"></span>\n      {caption && <span className=\"caption\">{caption}</span>}\n    </div>\n  )\n}\n\nTextArea.propTypes = {\n  value: PropTypes.string,\n  resize: PropTypes.oneOf(['both', 'vertical', 'horizontal', 'none']),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  invalid: PropTypes.bool,\n  line: PropTypes.bool,\n  label: PropTypes.string,\n  caption: PropTypes.string,\n  icon: PropTypes.string,\n}\nTextArea.defaultProps = {\n  value: 'Text',\n  resize: 'both',\n  disabled: false,\n  invalid: false,\n  line: false,\n}\n\nexport default TextArea\n","import React from 'react'\nimport { useTheme, createUseStyles, ThemeProvider } from 'react-jss'\nimport cx from 'classnames'\n\nimport Layout from '../../components/Layout'\nimport Main from '../../components/Main'\nimport SEO from '../../components/SEO'\nimport Button from '../../components/ui/Button'\nimport Checkbox from '../../components/ui/Checkbox'\nimport Radio from '../../components/ui/Radio'\nimport Switch from '../../components/ui/Switch'\nimport Slider from '../../components/ui/Slider'\nimport TextField from '../../components/ui/TextField'\nimport TextArea from '../../components/ui/TextArea'\n\nconst useStyles = createUseStyles({\n  main: {\n    maxWidth: 936,\n    margin: 'auto',\n  },\n  callout: {\n    padding: 24,\n    backgroundColor: ({ initial: theme }) => theme.colors.grayscale[100],\n    borderRadius: 6,\n    '& h1': {\n      marginTop: 0,\n      marginBottom: 16,\n    },\n    '& p': {\n      margin: 0,\n    },\n  },\n  section: {\n    margin: [0, 0, 40, 0],\n    '& h2': {\n      margin: [32, 0],\n    },\n  },\n  preview: {\n    extend: 'callout',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    minHeight: 238,\n    border: ({ initial: theme }) => `2px solid ${theme.colors.grayscale[200]}`,\n    backgroundColor: ({ updated: theme }) => theme.colors.brand.background,\n    '& .row': {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      maxWidth: '100%',\n    },\n    '& .component': {\n      marginRight: '1rem',\n\n      '&.text-field, &.text-area': { maxWidth: '15%' },\n    },\n  },\n})\n\nconst ThemePreview = ({ location }) => {\n  const initialTheme = useTheme()\n  const updatedTheme = location.state?.theme || initialTheme\n  const theme = { initial: initialTheme, updated: updatedTheme }\n  const styles = useStyles(theme)\n\n  return (\n    <Layout>\n      <SEO title=\"Theme Preview\" />\n      <Main className={styles.main}>\n        <section className={styles.callout}>\n          <h1>Preview</h1>\n          <p>Here you can download custumized components.</p>\n        </section>\n        <section className={styles.section}>\n          <h2>Button</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {['default', 'secondary'].map((type) => (\n                <div key={type} className=\"row\">\n                  {['primary', 'positive', 'negative', 'warning'].map((context) => (\n                    <Button key={`${type}-${context}`} className={cx(context, type, 'component')}>\n                      Button\n                    </Button>\n                  ))}\n                </div>\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>TextField</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {['default', 'line'].map((type) => (\n                <div key={type} className=\"row\">\n                  {[\n                    {},\n                    { disabled: true },\n                    { invalid: true },\n                    { icon: true },\n                    { label: 'Label', caption: 'Caption' },\n                    { invalid: true, label: 'Label', caption: 'Caption' },\n                  ].map((context, idx) => (\n                    <TextField\n                      key={`${type}-${idx}`}\n                      line={type === 'line'}\n                      {...context}\n                      className=\"component text-field\"\n                    />\n                  ))}\n                </div>\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>TextArea</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {['default', 'line'].map((type) => (\n                <div key={type} className=\"row\">\n                  {[\n                    {},\n                    { disabled: true },\n                    { invalid: true },\n                    { label: 'Label', caption: 'Caption' },\n                    { invalid: true, label: 'Label', caption: 'Caption' },\n                  ].map((context, idx) => (\n                    <TextArea\n                      key={`${type}-${idx}`}\n                      line={type === 'line'}\n                      {...context}\n                      resize=\"vertical\"\n                      className=\"component text-area\"\n                    />\n                  ))}\n                </div>\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>Checkbox</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {[\n                {},\n                { checked: true },\n                { disabled: true },\n                { checked: true, disabled: true },\n                { invalid: true },\n                { checked: true, invalid: true },\n                { checked: true, invalid: true, disabled: true },\n                { leftLabel: 'Label' },\n                { rightLabel: 'Label' },\n              ].map((state, idx) => (\n                <Checkbox key={idx} className=\"component\" {...state} />\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>Radio</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {[\n                {},\n                { checked: true },\n                { name: 'radio-disabled', disabled: true },\n                { name: 'radio-disabled', disabled: true, checked: true },\n                { name: 'radio-invalid', invalid: true },\n                { name: 'radio-invalid', invalid: true, checked: true },\n                { name: 'radio-invalid', invalid: true, checked: true, disabled: true },\n                { name: 'radio-label', leftLabel: 'Label' },\n                { name: 'radio-label', rightLabel: 'Label' },\n              ].map((state, idx) => (\n                <Radio key={idx} className=\"component\" {...state} />\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>Switch</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {[\n                {},\n                { checked: true },\n                { disabled: true },\n                { disabled: true, checked: true },\n                { invalid: true },\n                { invalid: true, checked: true },\n                { invalid: true, checked: true, disabled: true },\n                { leftLabel: 'Label' },\n                { rightLabel: 'Label' },\n              ].map((state, idx) => (\n                <Switch key={idx} className=\"component\" {...state} />\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>Slider</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {[{}, { disabled: true }, { invalid: true }, { invalid: true, disabled: true }].map(\n                (state, idx) => (\n                  <Slider key={idx} className=\"component\" {...state} />\n                ),\n              )}\n            </div>\n          </ThemeProvider>\n        </section>\n      </Main>\n    </Layout>\n  )\n}\n\nexport default ThemePreview\n"],"sourceRoot":""}