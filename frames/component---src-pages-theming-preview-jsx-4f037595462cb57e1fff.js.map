{"version":3,"sources":["webpack:///./src/components/ui/Checkbox.jsx","webpack:///./src/components/ui/Radio.jsx","webpack:///./src/components/ui/Switch.jsx","webpack:///./src/components/ui/Slider.jsx","webpack:///./src/components/ui/TextField.jsx","webpack:///./src/pages/theming/preview.jsx"],"names":["useStyles","createUseStyles","theme","getCheckboxStyles","Checkbox","className","checked","disabled","invalid","leftLabel","rightLabel","useTheme","styles","cx","checkbox","checkboxLabel","type","defaultChecked","checkboxToggle","defaultProps","getRadioStyles","Radio","name","radio","radioLabel","radioToggle","getSwitchStyles","Switch","hover","focus","switch","getSliderStyles","Slider","value","useEffect","document","querySelectorAll","forEach","input","setSliderProgress","target","slider","defaultValue","data-invalid","onInput","getTextFieldStyles","console","log","TextField","line","label","caption","icon","textField","placeholder","main","maxWidth","margin","callout","padding","backgroundColor","initial","colors","grayscale","borderRadius","marginTop","marginBottom","section","preview","extend","display","alignItems","justifyContent","flexWrap","minHeight","border","updated","brand","background","marginRight","ThemePreview","location","initialTheme","state","Layout","SEO","title","Main","map","key","context","Button","idx"],"mappings":"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","file":"component---src-pages-theming-preview-jsx-4f037595462cb57e1fff.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getCheckboxStyles } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getCheckboxStyles(theme))\n\nconst Checkbox = ({ className, checked, disabled, invalid, leftLabel, rightLabel }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <label className={cx(styles.checkbox, className, invalid && 'invalid')}>\n      {leftLabel && <span className={styles.checkboxLabel}>{leftLabel}</span>}\n      <input type=\"checkbox\" disabled={disabled} defaultChecked={checked} />\n      <span className={styles.checkboxToggle}></span>\n      {rightLabel && <span className={styles.checkboxLabel}>{rightLabel}</span>}\n    </label>\n  )\n}\n\nCheckbox.propTypes = {\n  className: PropTypes.string,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  invalid: PropTypes.bool,\n  leftLabel: PropTypes.string,\n  rightLabel: PropTypes.string,\n}\nCheckbox.defaultProps = {\n  checked: false,\n  disabled: false,\n  invalid: false,\n}\n\nexport default Checkbox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getRadioStyles } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getRadioStyles(theme))\n\nconst Radio = ({ name, className, leftLabel, rightLabel, checked, disabled, invalid }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <label className={cx(styles.radio, className, invalid && 'invalid')}>\n      {leftLabel && <span className={styles.radioLabel}>{leftLabel}</span>}\n      <input type=\"radio\" name={name} defaultChecked={checked} disabled={disabled} />\n      <span className={styles.radioToggle}></span>\n      {rightLabel && <span className={styles.radioLabel}>{rightLabel}</span>}\n    </label>\n  )\n}\n\nRadio.propTypes = {\n  name: PropTypes.string,\n  className: PropTypes.string,\n  leftLabel: PropTypes.string,\n  rightLabel: PropTypes.string,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  invalid: PropTypes.bool,\n}\nRadio.defaultProps = {\n  name: 'radio',\n  leftLabel: '',\n  rightLabel: '',\n  checked: false,\n  disabled: false,\n  invalid: false,\n}\n\nexport default Radio\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getSwitchStyles } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getSwitchStyles(theme))\n\nconst Switch = ({ className, leftLabel, rightLabel, checked, disabled, hover, focus, invalid }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <label className={cx(styles.switch, className, invalid && 'invalid')}>\n      {leftLabel && <span className=\"label\">{leftLabel}</span>}\n      <input type=\"checkbox\" defaultChecked={checked} disabled={disabled} />\n      <span className=\"toggle\"></span>\n      {rightLabel && <span className=\"label\">{rightLabel}</span>}\n    </label>\n  )\n}\n\nSwitch.propTypes = {\n  className: PropTypes.string,\n  leftLabel: PropTypes.string,\n  rightLabel: PropTypes.string,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  hover: PropTypes.bool,\n  focus: PropTypes.bool,\n  invalid: PropTypes.bool,\n}\nSwitch.defaultProps = {\n  leftLabel: '',\n  rightLabel: '',\n  checked: false,\n  disabled: false,\n  hover: false,\n  focus: false,\n  invalid: false,\n}\n\nexport default Switch\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getSliderStyles, setSliderProgress } from 'frames-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => getSliderStyles(theme))\n\nconst Slider = ({ value, className, disabled, invalid }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  useEffect(() => {\n    document\n      .querySelectorAll('input[type=\"range\"]')\n      .forEach((input) => void setSliderProgress({ target: input }))\n  }, [])\n\n  return (\n    <label className={cx(styles.slider, className)}>\n      <input\n        type=\"range\"\n        defaultValue={value}\n        disabled={disabled}\n        data-invalid={invalid}\n        onInput={setSliderProgress}\n      />\n      <span className=\"progress\"></span>\n      <span className=\"track\"></span>\n    </label>\n  )\n}\n\nSlider.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number,\n  disabled: PropTypes.bool,\n  invalid: PropTypes.bool,\n}\nSlider.defaultProps = {\n  value: 50,\n  disabled: false,\n  invalid: false,\n}\n\nexport default Slider\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport { getTextFieldStyles } from 'frames-jss'\nimport cx from 'classnames'\n\n// const useStyles = createUseStyles((theme) => getTextFieldStyles(theme))\nconst useStyles = createUseStyles((theme) => {\n  const styles = getTextFieldStyles(theme)\n  console.log(styles)\n  return styles\n})\n\nconst TextField = ({ value, disabled, invalid, line, label, caption, icon, className }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <div className={cx(styles.textField, className, invalid && 'invalid', line && 'line')}>\n      {label && <label>{label}</label>}\n      <input type=\"text\" defaultValue={value} disabled={disabled} placeholder=\"Placeholder\" />\n      {icon && <span className=\"icon\">{icon}</span>}\n      <span className=\"background\"></span>\n      {caption && <span className=\"caption\">{caption}</span>}\n    </div>\n  )\n}\n\nTextField.propTypes = {\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n  invalid: PropTypes.bool,\n  line: PropTypes.bool,\n  label: PropTypes.string,\n  caption: PropTypes.string,\n  icon: PropTypes.string,\n  className: PropTypes.string,\n}\nTextField.defaultProps = {\n  value: 'Text field',\n  disabled: false,\n  invalid: false,\n  line: false,\n}\n\nexport default TextField\n","import React from 'react'\nimport { useTheme, createUseStyles, ThemeProvider } from 'react-jss'\nimport cx from 'classnames'\n\nimport Layout from '../../components/Layout'\nimport Main from '../../components/Main'\nimport SEO from '../../components/SEO'\nimport Button from '../../components/ui/Button'\nimport Checkbox from '../../components/ui/Checkbox'\nimport Radio from '../../components/ui/Radio'\nimport Switch from '../../components/ui/Switch'\nimport Slider from '../../components/ui/Slider'\nimport TextField from '../../components/ui/TextField'\n\nconst useStyles = createUseStyles({\n  main: {\n    maxWidth: 936,\n    margin: 'auto',\n  },\n  callout: {\n    padding: 24,\n    backgroundColor: ({ initial: theme }) => theme.colors.grayscale[100],\n    borderRadius: 6,\n    '& h1': {\n      marginTop: 0,\n      marginBottom: 16,\n    },\n    '& p': {\n      margin: 0,\n    },\n  },\n  section: {\n    margin: [0, 0, 40, 0],\n    '& h2': {\n      margin: [32, 0],\n    },\n  },\n  preview: {\n    extend: 'callout',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    minHeight: 238,\n    border: ({ initial: theme }) => `2px solid ${theme.colors.grayscale[200]}`,\n    backgroundColor: ({ updated: theme }) => theme.colors.brand.background,\n    '& .row': {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      maxWidth: '100%',\n    },\n    '& .component': {\n      marginRight: '1rem',\n\n      '&.text-field': { maxWidth: '15%' },\n    },\n  },\n})\n\nconst ThemePreview = ({ location }) => {\n  const initialTheme = useTheme()\n  const updatedTheme = location.state?.theme || initialTheme\n  const theme = { initial: initialTheme, updated: updatedTheme }\n  const styles = useStyles(theme)\n\n  return (\n    <Layout>\n      <SEO title=\"Theme Preview\" />\n      <Main className={styles.main}>\n        <section className={styles.callout}>\n          <h1>Preview</h1>\n          <p>Here you can download custumized components.</p>\n        </section>\n        <section className={styles.section}>\n          <h2>Button</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {['default', 'secondary'].map((type) => (\n                <div key={type} className=\"row\">\n                  {['primary', 'positive', 'negative', 'warning'].map((context) => (\n                    <Button key={`${type}-${context}`} className={cx(context, type, 'component')}>\n                      Button\n                    </Button>\n                  ))}\n                </div>\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>TextField</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {['default', 'line'].map((type) => (\n                <div key={type} className=\"row\">\n                  {[{}, { disabled: true }, { invalid: true }, { icon: '⭑' }, { label: 'Label', caption: 'Caption' }, { invalid: true, label: 'Label', caption: 'Caption' }].map((context, idx) => (\n                    <TextField key={`${type}-${idx}`} line={type === 'line'} {...context} className={\"component text-field\"} />\n                  ))}\n                </div>\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>Checkbox</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {[\n                {},\n                { checked: true },\n                { disabled: true },\n                { checked: true, disabled: true },\n                { invalid: true },\n                { checked: true, invalid: true },\n                { checked: true, invalid: true, disabled: true },\n                { leftLabel: 'Label' },\n                { rightLabel: 'Label' },\n              ].map((state, idx) => (\n                <Checkbox key={idx} className=\"component\" {...state} />\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>Radio</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {[\n                {},\n                { checked: true },\n                { name: 'radio-disabled', disabled: true },\n                { name: 'radio-disabled', disabled: true, checked: true },\n                { name: 'radio-invalid', invalid: true },\n                { name: 'radio-invalid', invalid: true, checked: true },\n                { name: 'radio-invalid', invalid: true, checked: true, disabled: true },\n                { name: 'radio-label', leftLabel: 'Label' },\n                { name: 'radio-label', rightLabel: 'Label' },\n              ].map((state, idx) => (\n                <Radio key={idx} className=\"component\" {...state} />\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>Switch</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {[\n                {},\n                { checked: true },\n                { disabled: true },\n                { disabled: true, checked: true },\n                { invalid: true },\n                { invalid: true, checked: true },\n                { invalid: true, checked: true, disabled: true },\n                { leftLabel: 'Label' },\n                { rightLabel: 'Label' },\n              ].map((state, idx) => (\n                <Switch key={idx} className=\"component\" {...state} />\n              ))}\n            </div>\n          </ThemeProvider>\n        </section>\n        <section className={styles.section}>\n          <h2>Slider</h2>\n          <ThemeProvider theme={theme.updated}>\n            <div className={styles.preview}>\n              {[{}, { disabled: true }, { invalid: true }, { invalid: true, disabled: true }].map(\n                (state, idx) => (\n                  <Slider key={idx} className=\"component\" {...state} />\n                ),\n              )}\n            </div>\n          </ThemeProvider>\n        </section>\n      </Main>\n    </Layout>\n  )\n}\n\nexport default ThemePreview\n"],"sourceRoot":""}