{"version":3,"sources":["webpack:///./src/components/Main.jsx","webpack:///./src/components/Sidebar.jsx","webpack:///./src/components/theming/ThemeColorPicker.jsx","webpack:///./src/pages/theming.jsx"],"names":["useStyles","createUseStyles","theme","main","flex","padding","Main","children","useTheme","styles","className","sidebar","width","maxWidth","backgroundColor","colors","grayscale","borderRight","search","display","alignItems","fontSize","marginLeft","border","outline","Sidebar","type","placeholder","picker","preview","height","marginBottom","brand","background","borderRadius","boxShadow","cursor","transition","transform","property","ThemeColorPicker","color","name","cx","role","style","value","onChange","h3","callout","marginTop","margin","section","flexWrap","justifyContent","listStyle","Theming","Layout","SEO","title","Object","keys","map","key","ui"],"mappings":"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","file":"component---src-pages-theming-jsx-f158a2c5d974766cc923.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles((theme) => ({\n  main: {\n    flex: 'min-content',\n    padding: 32,\n  },\n}))\n\nconst Main = ({ children }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return <main className={styles.main}>{children}</main>\n}\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Main\n","import React from 'react'\nimport { useTheme, createUseStyles } from 'react-jss'\n\nconst useStyles = createUseStyles((theme) => ({\n  sidebar: {\n    width: '20%',\n    maxWidth: 360,\n    padding: [25, 32],\n    backgroundColor: theme.colors.grayscale[100],\n    borderRight: [1, 'solid', theme.colors.grayscale[200]],\n  },\n  search: {\n    display: 'flex',\n    alignItems: 'center',\n    fontSize: 22,\n    '& input': {\n      marginLeft: 12,\n      border: 'none',\n      backgroundColor: 'transparent',\n      fontSize: 18,\n      '&:focus': {\n        outline: 'none',\n      },\n    },\n  },\n}))\n\nconst Sidebar = () => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <div className={styles.sidebar}>\n      <div className={styles.search}>\n        <span>üîç</span>\n        <input type=\"text\" placeholder=\"Search\" />\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme, createUseStyles } from 'react-jss'\nimport cx from 'classnames'\n\nconst useStyles = createUseStyles((theme) => ({\n  picker: {\n    maxWidth: 210,\n  },\n  preview: {\n    width: '100%',\n    height: 90,\n    marginBottom: 22,\n    border: [3, 'solid', theme.colors.brand.background],\n    borderRadius: 16,\n    boxShadow: [0, 0, 3, 0, 'rgba(0, 0, 0, 0.12)'],\n    cursor: 'pointer',\n    transition: 'all 0.3s ease-in-out',\n    '&:hover': {\n      transform: 'scale(1.1)',\n    },\n  },\n  property: {\n    display: 'block',\n    marginBottom: 8,\n    padding: 6,\n    border: 'none',\n    borderRadius: 6,\n    backgroundColor: theme.colors.grayscale[100],\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n}))\n\nconst ThemeColorPicker = ({ color, name, className }) => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <div className={cx(styles.picker, className)}>\n      <div role=\"button\" className={styles.preview} style={{ backgroundColor: color }}></div>\n      <input className={styles.property} value={color} onChange={() => {}} />\n      <span className={styles.property}>{name}</span>\n    </div>\n  )\n}\n\nThemeColorPicker.propTypes = {\n  color: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  className: PropTypes.string,\n}\n\nexport default ThemeColorPicker\n","import React from 'react'\nimport { useTheme, createUseStyles } from 'react-jss'\n\nimport Layout from '../components/Layout'\nimport Sidebar from '../components/Sidebar'\nimport Main from '../components/Main'\nimport SEO from '../components/SEO'\nimport ThemeColorPicker from '../components/theming/ThemeColorPicker'\n\nconst useStyles = createUseStyles((theme) => ({\n  '@global': {\n    h3: {\n      color: theme.colors.grayscale[400],\n    },\n  },\n  callout: {\n    padding: 24,\n    backgroundColor: theme.colors.grayscale[100],\n    borderRadius: 6,\n    '& h1': {\n      marginTop: 0,\n      marginBottom: 16,\n    },\n    '& p': {\n      margin: 0,\n    },\n  },\n  section: {\n    margin: [0, 0, 40, 0],\n    '& h2': {\n      margin: [32, 0, 0, 0],\n    },\n    '& h3': {\n      margin: [0, 0, 16, 0],\n    },\n    '& hr': {\n      margin: [16, 0],\n    },\n  },\n  colors: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    listStyle: 'none',\n    margin: [0, 0, 20, 0],\n    padding: 0,\n    '& li': {\n      margin: [0, 0, 40, 0],\n    },\n  },\n}))\n\nconst Theming = () => {\n  const theme = useTheme()\n  const styles = useStyles(theme)\n\n  return (\n    <Layout>\n      <SEO title=\"Theming\" />\n      <Sidebar />\n      <Main>\n        <section className={styles.callout}>\n          <h1>Title</h1>\n          <p>\n            Theming control center provides you with all necessary details to customize and make\n            Frames your own design system or prepare it for a new project.\n          </p>\n        </section>\n        <section className={styles.section}>\n          <h2>Colors</h2>\n          <hr />\n          <h3>Brand</h3>\n          <ul className={styles.colors}>\n            {Object.keys(theme.colors.brand).map((name) => (\n              <li key={name}>\n                <ThemeColorPicker color={theme.colors.brand[name]} name={name} />\n              </li>\n            ))}\n          </ul>\n          <h3>UI</h3>\n          <ul className={styles.colors}>\n            {Object.keys(theme.colors.ui).map((name) => (\n              <li key={name}>\n                <ThemeColorPicker color={theme.colors.ui[name]} name={name} />\n              </li>\n            ))}\n          </ul>\n          <h3>Grayscale</h3>\n          <ul className={styles.colors}>\n            {Object.keys(theme.colors.grayscale).map((name) => (\n              <li key={name}>\n                <ThemeColorPicker color={theme.colors.grayscale[name]} name={name} />\n              </li>\n            ))}\n          </ul>\n        </section>\n      </Main>\n    </Layout>\n  )\n}\n\nexport default Theming\n"],"sourceRoot":""}